// <auto-generated />
using System;
using ComplementApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComplementApp.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210910201422_TDocumentoExcel_Creation")]
    partial class TDocumentoExcel_Creation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ComplementApp.API.Models.ActividadEconomica", b =>
                {
                    b.Property<int>("ActividadEconomicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("VARCHAR(4)");

                    b.Property<string>("Nombre")
                        .HasColumnType("VARCHAR(1000)");

                    b.HasKey("ActividadEconomicaId");

                    b.ToTable("TActividadEconomica");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ActividadEspecifica", b =>
                {
                    b.Property<int>("ActividadEspecificaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActividadGeneralId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int?>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoPorProgramar")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorApropiacionVigente")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("ActividadEspecificaId");

                    b.HasIndex("ActividadGeneralId");

                    b.HasIndex("PciId");

                    b.HasIndex("RubroPresupuestalId");

                    b.ToTable("TActividadEspecifica");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ActividadGeneral", b =>
                {
                    b.Property<int>("ActividadGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("ApropiacionDisponible")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ApropiacionVigente")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int?>("FuenteFinanciacionId")
                        .HasColumnType("int");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int?>("RecursoPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int?>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int?>("SituacionFondoId")
                        .HasColumnType("int");

                    b.HasKey("ActividadGeneralId");

                    b.HasIndex("PciId");

                    b.HasIndex("RubroPresupuestalId");

                    b.ToTable("TActividadGeneral");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ArchivoDetalleLiquidacion", b =>
                {
                    b.Property<int>("ArchivoDetalleLiquidacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CantidadRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Consecutivo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoArchivo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.HasKey("ArchivoDetalleLiquidacionId");

                    b.HasIndex("PciId");

                    b.ToTable("TArchivoDetalleLiquidacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.HasKey("AreaId");

                    b.HasIndex("PciId");

                    b.ToTable("TArea");
                });

            modelBuilder.Entity("ComplementApp.API.Models.AtributoContable", b =>
                {
                    b.Property<int>("AtributoContableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("AtributoContableId");

                    b.ToTable("TAtributoContable");
                });

            modelBuilder.Entity("ComplementApp.API.Models.CDP", b =>
                {
                    b.Property<int>("CdpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Cdp")
                        .HasColumnType("bigint");

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<string>("Detalle1")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle10")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle2")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle3")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle4")
                        .HasColumnType("VARCHAR(4000)");

                    b.Property<string>("Detalle5")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle6")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle7")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle8")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Detalle9")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Instancia")
                        .HasColumnType("int");

                    b.Property<long>("Obligacion")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Operacion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<long>("OrdenPago")
                        .HasColumnType("bigint");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoActual")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("CdpId");

                    b.HasIndex("PciId");

                    b.HasIndex("RubroPresupuestalId");

                    b.HasIndex("TerceroId");

                    b.ToTable("TCDP");
                });

            modelBuilder.Entity("ComplementApp.API.Models.CargaObligacion", b =>
                {
                    b.Property<int>("CargaObligacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cdp")
                        .HasColumnType("int");

                    b.Property<int>("Compromiso")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<int?>("CuentaPorPagar")
                        .HasColumnType("int");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("DependenciaDescripcion")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("EntidadDescripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("EntidadNit")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("EstadoCuenta")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCuentaPorPagar")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDocSoporteCompromiso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuenteFinanciacionId")
                        .HasColumnType("int");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NombreRazonSocial")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("NumeroDocSoporteCompromiso")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("ObjetoCompromiso")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<int>("Obligacion")
                        .HasColumnType("int");

                    b.Property<long>("OrdenPago")
                        .HasColumnType("bigint");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int?>("RecursoPresupuestalId")
                        .HasColumnType("int");

                    b.Property<string>("Reintegro")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoPorUtilizar")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int?>("SituacionFondoId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudCdp")
                        .HasColumnType("int");

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("TipoDocumentoIdentidadId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDocumentoSoporteId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorActual")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorActual2")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorDeduccion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorObligadoNoOrdenado")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorOperacion")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("CargaObligacionId");

                    b.HasIndex("FuenteFinanciacionId");

                    b.HasIndex("PciId");

                    b.HasIndex("RecursoPresupuestalId");

                    b.HasIndex("RubroPresupuestalId");

                    b.HasIndex("SituacionFondoId");

                    b.HasIndex("TipoDocumentoIdentidadId");

                    b.HasIndex("TipoDocumentoSoporteId");

                    b.ToTable("TCargaObligacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("CargoId");

                    b.ToTable("TCargo");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ClavePresupuestalContable", b =>
                {
                    b.Property<int>("ClavePresupuestalContableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<int>("FuenteFinanciacionId")
                        .HasColumnType("int");

                    b.Property<string>("Pci")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int>("RecursoPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int>("RelacionContableId")
                        .HasColumnType("int");

                    b.Property<int>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int>("SituacionFondoId")
                        .HasColumnType("int");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<int?>("UsoPresupuestalId")
                        .HasColumnType("int");

                    b.HasKey("ClavePresupuestalContableId");

                    b.HasIndex("FuenteFinanciacionId");

                    b.HasIndex("RecursoPresupuestalId");

                    b.HasIndex("RelacionContableId");

                    b.HasIndex("RubroPresupuestalId");

                    b.HasIndex("SituacionFondoId");

                    b.HasIndex("TerceroId");

                    b.HasIndex("UsoPresupuestalId");

                    b.ToTable("TClavePresupuestalContable");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Contrato", b =>
                {
                    b.Property<int>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<bool>("EsPagoMensual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("FechaExpedicionPoliza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInsercion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroContrato")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int>("Supervisor1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Supervisor2Id")
                        .HasColumnType("int");

                    b.Property<int>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPagoMensual")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("ContratoId");

                    b.HasIndex("PciId");

                    b.ToTable("TContrato");
                });

            modelBuilder.Entity("ComplementApp.API.Models.CriterioCalculoReteFuente", b =>
                {
                    b.Property<int>("CriterioCalculoReteFuenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Desde")
                        .HasColumnType("int");

                    b.Property<int>("Factor")
                        .HasColumnType("int");

                    b.Property<int>("Hasta")
                        .HasColumnType("int");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("CriterioCalculoReteFuenteId");

                    b.ToTable("TCriterioCalculoReteFuente");
                });

            modelBuilder.Entity("ComplementApp.API.Models.CuentaContable", b =>
                {
                    b.Property<int>("CuentaContableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DescripcionCuenta")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("CuentaContableId");

                    b.ToTable("TCuentaContable");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Deduccion", b =>
                {
                    b.Property<int>("DeduccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("EsValorFijo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Gmf")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int?>("TerceroId")
                        .HasColumnType("int");

                    b.Property<int>("TipoBaseDeduccionId")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.HasKey("DeduccionId");

                    b.HasIndex("TerceroId");

                    b.HasIndex("TipoBaseDeduccionId");

                    b.ToTable("TDeduccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Dependencia", b =>
                {
                    b.Property<int>("DependenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.HasKey("DependenciaId");

                    b.HasIndex("AreaId");

                    b.HasIndex("PciId");

                    b.ToTable("TDependencia");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleArchivoLiquidacion", b =>
                {
                    b.Property<int>("ArchivoDetalleLiquidacionId")
                        .HasColumnType("int");

                    b.Property<int>("DetalleLiquidacionId")
                        .HasColumnType("int");

                    b.HasKey("ArchivoDetalleLiquidacionId", "DetalleLiquidacionId");

                    b.HasIndex("DetalleLiquidacionId");

                    b.ToTable("TDetalleArchivoLiquidacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleFormatoSolicitudPago", b =>
                {
                    b.Property<int>("DetalleFormatoSolicitudPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClavePresupuestalContableId")
                        .HasColumnType("int");

                    b.Property<string>("Dependencia")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<int>("FormatoSolicitudPagoId")
                        .HasColumnType("int");

                    b.Property<int>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAPagar")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("DetalleFormatoSolicitudPagoId");

                    b.HasIndex("ClavePresupuestalContableId");

                    b.HasIndex("FormatoSolicitudPagoId");

                    b.HasIndex("RubroPresupuestalId");

                    b.ToTable("TDetalleFormatoSolicitudPago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleLiquidacion", b =>
                {
                    b.Property<int>("DetalleLiquidacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Afc")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("AportePension")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("AporteSalud")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("BaseGravableRenta")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("BaseGravableUvt")
                        .HasColumnType("decimal(30,8)");

                    b.Property<bool?>("BaseImpuestos")
                        .HasColumnType("bit");

                    b.Property<decimal>("BaseSalud")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("CantidadPago")
                        .HasColumnType("int");

                    b.Property<string>("Contrato")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Dependientes")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int?>("DiasAlPago")
                        .HasColumnType("int");

                    b.Property<decimal>("DiferencialRenta")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaOrdenPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRadicado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FondoSolidaridad")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int?>("FormatoSolicitudPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Honorario")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("HonorarioUvt")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ImpuestoCovid")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("InteresesVivienda")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("LimiteRentaExenta")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("MedicinaPrepagada")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("MesPagoActual")
                        .HasColumnType("int");

                    b.Property<int>("MesPagoAnterior")
                        .HasColumnType("int");

                    b.Property<int>("MesSaludActual")
                        .HasColumnType("int");

                    b.Property<int>("MesSaludAnterior")
                        .HasColumnType("int");

                    b.Property<int>("ModalidadContrato")
                        .HasColumnType("int");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NombreSupervisor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("NumeroPago")
                        .HasColumnType("int");

                    b.Property<string>("NumeroRadicado")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<long?>("Obligacion")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrdenPago")
                        .HasColumnType("bigint");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<decimal>("PensionVoluntaria")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("PlanPagoId")
                        .HasColumnType("int");

                    b.Property<bool>("Procesado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("RentaExenta")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("RiesgoLaboral")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("RubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("SaldoActual")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("SubTotal1")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("SubTotal2")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("SubTotal3")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<string>("TextoComprobanteContable")
                        .HasColumnType("VARCHAR(4000)");

                    b.Property<decimal>("TotalACancelar")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("TotalAGirar")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("TotalDeducciones")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("TotalRentaExenta")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("TotalRetenciones")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("UsoPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAdicionReduccion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorCancelado")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("Viaticos")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<decimal>("ViaticosPagados")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("DetalleLiquidacionId");

                    b.HasIndex("FormatoSolicitudPagoId");

                    b.HasIndex("PciId");

                    b.HasIndex("PlanPagoId");

                    b.ToTable("TDetalleLiquidacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleSolicitudCDP", b =>
                {
                    b.Property<int>("DetalleSolicitudCDPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PlanAdquisicionId")
                        .HasColumnType("int");

                    b.Property<int>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoActividad")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal?>("SaldoCDP")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("SolicitudCDPId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorActividad")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal?>("ValorCDP")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorSolicitud")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("DetalleSolicitudCDPId");

                    b.HasIndex("PlanAdquisicionId");

                    b.HasIndex("RubroPresupuestalId");

                    b.HasIndex("SolicitudCDPId");

                    b.ToTable("TDetalleSolicitudCDP");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("EstadoId");

                    b.ToTable("TEstado");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ExcelDocumento.DocumentoCdp", b =>
                {
                    b.Property<int>("DocumentoCdpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Compromisos")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("CuentasPagar")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("DependenciaDescripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("DescripcionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FuenteFinanciacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("IdentificacionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<long>("NumeroDocumento")
                        .HasColumnType("bigint");

                    b.Property<string>("Objeto")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Obligaciones")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("OrdenesPago")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("RecursoPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Reintegros")
                        .HasColumnType("VARCHAR(3000)");

                    b.Property<decimal>("SaldoPorComprometer")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("SituacionFondo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("SolicitudCdp")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("TipoCdp")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("ValorActual")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorOperacion")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("DocumentoCdpId");

                    b.ToTable("TDocumentoCdp");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ExcelDocumento.DocumentoCompromiso", b =>
                {
                    b.Property<int>("DocumentoCompromisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cdp")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Compromisos")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("CuentasXPagar")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("DependenciaDescripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("DescripcionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("EntidadDescripcion")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("EntidadNit")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("EstadoCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDocumentoSoporte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FuenteFinanciacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("IdentificacionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("MedioPago")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NombreRazonSocial")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<long>("NumeroDocumento")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroDocumentoSoporte")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Obligaciones")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("OrdenesPago")
                        .HasColumnType("VARCHAR(6000)");

                    b.Property<string>("RecursoPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Reintegros")
                        .HasColumnType("VARCHAR(3000)");

                    b.Property<decimal>("SaldoPorUtilizar")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("SituacionFondo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("SolicitudCdp")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("TipoCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoDocumentoSoporte")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoIdentificacion")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("ValorActual")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorOperacion")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("DocumentoCompromisoId");

                    b.ToTable("TDocumentoCompromiso");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ExcelDocumento.DocumentoObligacion", b =>
                {
                    b.Property<int>("DocumentoObligacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cdp")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Compromisos")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3000)");

                    b.Property<string>("CuentasXPagar")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("DependenciaDescripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("DescripcionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("EntidadDescripcion")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("EntidadNit")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("EstadoCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCuentaXPagar")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDocumentoSoporte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FuenteFinanciacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("IdentificacionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("MedioPago")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NombreRazonSocial")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<long>("NumeroDocumento")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroDocumentoSoporte")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("ObjetoCompromiso")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Obligaciones")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("OrdenesPago")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("RecursoPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Reintegros")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("SaldoPorUtilizar")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("SituacionFondo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("SolicitudCdp")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoDocumentoSoporte")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoIdentificacion")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("ValorActual")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorActual2")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorDeduccion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorObligadoNoOrdenado")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorOperacion")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("DocumentoObligacionId");

                    b.ToTable("TDocumentoObligacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ExcelDocumento.DocumentoOrdenPago", b =>
                {
                    b.Property<int>("DocumentoOrdenPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cdp")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Compromisos")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("ConceptoPago")
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<string>("CuentaPagaduria")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CuentasXPagar")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Dependencia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("DependenciaDescripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("DescripcionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Endosada")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("EntidadDescripcion")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("EntidadNit")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("EstadoCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("FechaCuentaXPagar")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDocumentoSoporteCompromiso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FuenteFinanciacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("IdentificacionPagaduria")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("IdentificacionRubroPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("MedioPago")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NombreRazonSocial")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NombreRazonSocial1")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NumeroCuenta1")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<long>("NumeroDocumento")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroDocumentoSoporteCompromiso")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("NumeroIdentificacion1")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("ObjetoCompromiso")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Obligaciones")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("OrdenesPago")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("RecursoPresupuestal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Reintegros")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("SituacionFondo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("SolicitudCdp")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TesoreriaPagadora")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoBeneficiario")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoCuenta")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoDocumentoSoporteCompromiso")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoIdentificacion")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("TipoIdentificacion1")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorDeduccion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorMoneda")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorNeto")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorPesos")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorReintegradoMoneda")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorReintegradoPesos")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("VigenciaPresupuestal")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("DocumentoOrdenPagoId");

                    b.ToTable("TDocumentoOrdenPago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.FormatoSolicitudPago", b =>
                {
                    b.Property<int>("FormatoSolicitudPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActividadEconomicaId")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseCotizacion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<bool>("EsSaludVencida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NumeroPlanilla")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("ObservacionesModificacion")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int>("PlanPagoId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorBaseGravableRenta")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorFacturado")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("FormatoSolicitudPagoId");

                    b.HasIndex("ActividadEconomicaId");

                    b.HasIndex("PciId");

                    b.HasIndex("PlanPagoId");

                    b.ToTable("TFormatoSolicitudPago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.FuenteFinanciacion", b =>
                {
                    b.Property<int>("FuenteFinanciacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("FuenteFinanciacionId");

                    b.ToTable("TFuenteFinanciacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.LiquidacionDeduccion", b =>
                {
                    b.Property<int>("LiquidacionDeduccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Base")
                        .HasColumnType("decimal(30,8)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("DeduccionId")
                        .HasColumnType("int");

                    b.Property<int>("DetalleLiquidacionId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("LiquidacionDeduccionId");

                    b.HasIndex("DeduccionId");

                    b.HasIndex("DetalleLiquidacionId");

                    b.ToTable("TLiquidacionDeduccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.NivelAgrupacionPac", b =>
                {
                    b.Property<int>("NivelAgrupacionPacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DependenciaAfectacionPAC")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("FuenteFinanciacionId")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("IdentificacionTesoreria")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int>("RecursoPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int>("SituacionFondoId")
                        .HasColumnType("int");

                    b.HasKey("NivelAgrupacionPacId");

                    b.HasIndex("FuenteFinanciacionId");

                    b.HasIndex("PciId");

                    b.HasIndex("RecursoPresupuestalId");

                    b.HasIndex("RubroPresupuestalId");

                    b.HasIndex("SituacionFondoId");

                    b.ToTable("TNivelAgrupacionPac");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Numeracion", b =>
                {
                    b.Property<int>("NumeracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Consecutivo")
                        .HasColumnType("int");

                    b.Property<int?>("FormatoSolicitudPagoId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroConsecutivo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<bool>("Utilizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("NumeracionId");

                    b.HasIndex("FormatoSolicitudPagoId");

                    b.HasIndex("PciId");

                    b.ToTable("TNumeracion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ParametroGeneral", b =>
                {
                    b.Property<int>("ParametroGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Tipo")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Valor")
                        .HasColumnType("VARCHAR(8000)");

                    b.HasKey("ParametroGeneralId");

                    b.ToTable("TParametroGeneral");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ParametroLiquidacionTercero", b =>
                {
                    b.Property<int>("ParametroLiquidacionTerceroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Afc")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("AportePension")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("AporteSalud")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("BaseAporteSalud")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("Dependiente")
                        .HasColumnType("decimal(30,8)");

                    b.Property<bool>("FacturaElectronica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("FechaFinalDescuentoInteresVivienda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinalOtrosDescuentos")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioDescuentoInteresVivienda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioOtrosDescuentos")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FondoSolidaridad")
                        .HasColumnType("decimal(30,8)");

                    b.Property<bool>("GmfAfc")
                        .HasColumnType("bit");

                    b.Property<decimal?>("HonorarioSinIva")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("InteresVivienda")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("MedicinaPrepagada")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("ModalidadContrato")
                        .HasColumnType("int");

                    b.Property<bool>("NotaLegal1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("NotaLegal2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("NotaLegal3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("NotaLegal4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("NotaLegal5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("NotaLegal6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("OtrosDescuentos")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<decimal>("PensionVoluntaria")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("RiesgoLaboral")
                        .HasColumnType("decimal(30,8)");

                    b.Property<bool>("Subcontrata")
                        .HasColumnType("bit");

                    b.Property<decimal>("TarifaIva")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoAdminPilaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoCuentaXPagarId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDocumentoSoporteId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIva")
                        .HasColumnType("int");

                    b.Property<int>("TipoPago")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.HasKey("ParametroLiquidacionTerceroId");

                    b.HasIndex("PciId");

                    b.HasIndex("TerceroId");

                    b.HasIndex("TipoAdminPilaId");

                    b.ToTable("TParametroLiquidacionTercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ParametroSistema", b =>
                {
                    b.Property<int>("ParametroSistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Valor")
                        .HasColumnType("VARCHAR(8000)");

                    b.HasKey("ParametroSistemaId");

                    b.ToTable("TParametroSistema");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Pci", b =>
                {
                    b.Property<int>("PciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nit")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("PciId");

                    b.ToTable("TPci");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("PerfilId");

                    b.ToTable("TPerfil");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PerfilTransaccion", b =>
                {
                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<int>("TransaccionId")
                        .HasColumnType("int");

                    b.HasKey("PerfilId", "TransaccionId");

                    b.HasIndex("TransaccionId");

                    b.ToTable("TPerfilTransaccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PlanAdquisicion", b =>
                {
                    b.Property<int>("PlanAdquisicionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActividadEspecificaId")
                        .HasColumnType("int");

                    b.Property<int>("ActividadGeneralId")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaContrato")
                        .HasColumnType("bit");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<long>("Cdp")
                        .HasColumnType("bigint");

                    b.Property<int>("Convenio")
                        .HasColumnType("int");

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<int>("DecretoId")
                        .HasColumnType("int");

                    b.Property<int>("DependenciaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEstimadaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArchivo")
                        .HasColumnType("int");

                    b.Property<int>("PciId")
                        .HasColumnType("int");

                    b.Property<string>("PcpId")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("PlanDeCompras")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<int>("Prod")
                        .HasColumnType("int");

                    b.Property<int>("Proy")
                        .HasColumnType("int");

                    b.Property<int>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoAct")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("SaldoDisponible")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("SaldoTotal")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAct")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorCDP")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorModificacion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorOB")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorOP")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorRP")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("Valor_Convenio")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("PlanAdquisicionId");

                    b.HasIndex("PciId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TPlanAdquisicion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PlanAdquisicionHistorico", b =>
                {
                    b.Property<int>("PlanAdquisicionHistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActividadEspecificaId")
                        .HasColumnType("int");

                    b.Property<int>("ActividadGeneralId")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaContrato")
                        .HasColumnType("bit");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<int>("DecretoId")
                        .HasColumnType("int");

                    b.Property<int>("DependenciaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("PciId")
                        .HasColumnType("int");

                    b.Property<int>("PlanAdquisicioId")
                        .HasColumnType("int");

                    b.Property<string>("PlanDeCompras")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<int>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int?>("TransaccionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("PlanAdquisicionHistoricoId");

                    b.HasIndex("PciId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TPlanAdquisicionHistorico");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PlanPago", b =>
                {
                    b.Property<int>("PlanPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AnioPago")
                        .HasColumnType("int");

                    b.Property<long>("Cdp")
                        .HasColumnType("bigint");

                    b.Property<long>("Crp")
                        .HasColumnType("bigint");

                    b.Property<int?>("EstadoOrdenPagoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoPlanPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRadicadoProveedor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRadicadoSupervisor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesPago")
                        .HasColumnType("int");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("NumeroPago")
                        .HasColumnType("int");

                    b.Property<string>("NumeroRadicadoProveedor")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroRadicadoSupervisor")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int?>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SaldoDisponible")
                        .HasColumnType("decimal(30,8)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<int?>("UsoPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAPagar")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal?>("ValorAdicion")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal?>("ValorFacturado")
                        .HasColumnType("decimal(30,8)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(30,8)");

                    b.Property<bool>("Viaticos")
                        .HasColumnType("bit");

                    b.HasKey("PlanPagoId");

                    b.HasIndex("PciId");

                    b.HasIndex("TerceroId");

                    b.ToTable("TPlanPago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.RecursoPresupuestal", b =>
                {
                    b.Property<int>("RecursoPresupuestalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("RecursoPresupuestalId");

                    b.ToTable("TRecursoPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.RelacionContable", b =>
                {
                    b.Property<int>("RelacionContableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AtributoContableId")
                        .HasColumnType("int");

                    b.Property<int?>("CuentaContableId")
                        .HasColumnType("int");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int?>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoGastoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoOperacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsoContable")
                        .HasColumnType("int");

                    b.HasKey("RelacionContableId");

                    b.HasIndex("AtributoContableId");

                    b.HasIndex("CuentaContableId");

                    b.HasIndex("PciId");

                    b.HasIndex("TipoGastoId");

                    b.ToTable("TRelacionContable");
                });

            modelBuilder.Entity("ComplementApp.API.Models.RubroPresupuestal", b =>
                {
                    b.Property<int>("RubroPresupuestalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("PadreRubroId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("RubroPresupuestalId");

                    b.ToTable("TRubroPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.SituacionFondo", b =>
                {
                    b.Property<int>("SituacionFondoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("SituacionFondoId");

                    b.ToTable("TSituacionFondo");
                });

            modelBuilder.Entity("ComplementApp.API.Models.SolicitudCDP", b =>
                {
                    b.Property<int>("SolicitudCDPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActividadProyectoInversion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<bool>("AplicaContrato")
                        .HasColumnType("bit");

                    b.Property<long?>("Cdp")
                        .HasColumnType("bigint");

                    b.Property<string>("EstadoCDP")
                        .HasColumnType("VARCHAR(150)");

                    b.Property<int>("EstadoSolicitudCDPId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreBienServicio")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<int>("NumeroActividad")
                        .HasColumnType("int");

                    b.Property<string>("ObjetoBienServicioContratado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<string>("ProyectoInversion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<int?>("TipoDetalleCDPId")
                        .HasColumnType("int");

                    b.Property<int>("TipoOperacionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.HasKey("SolicitudCDPId");

                    b.HasIndex("EstadoSolicitudCDPId");

                    b.HasIndex("PciId");

                    b.HasIndex("TipoDetalleCDPId");

                    b.HasIndex("TipoOperacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TSolicitudCDP");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Tercero", b =>
                {
                    b.Property<int>("TerceroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("DeclaranteRenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Direccion")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("FechaExpedicionDocumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("RegimenTributario")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Telefono")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdModificacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdRegistro")
                        .HasColumnType("int");

                    b.HasKey("TerceroId");

                    b.ToTable("TTercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TerceroDeduccion", b =>
                {
                    b.Property<int>("TerceroDeduccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ActividadEconomicaId")
                        .HasColumnType("int");

                    b.Property<int?>("DeduccionId")
                        .HasColumnType("int");

                    b.Property<int?>("ParametroLiquidacionTerceroId")
                        .HasColumnType("int");

                    b.Property<int?>("TerceroDeDeduccionId")
                        .HasColumnType("int");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorFijo")
                        .HasColumnType("decimal(30,8)");

                    b.HasKey("TerceroDeduccionId");

                    b.HasIndex("ActividadEconomicaId");

                    b.HasIndex("DeduccionId");

                    b.HasIndex("ParametroLiquidacionTerceroId");

                    b.HasIndex("TerceroId");

                    b.ToTable("TTerceroDeduccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoAdminPila", b =>
                {
                    b.Property<int>("TipoAdminPilaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoAdminPilaId");

                    b.ToTable("TTipoAdminPila");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoBaseDeduccion", b =>
                {
                    b.Property<int>("TipoBaseDeduccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("TipoBaseDeduccionId");

                    b.ToTable("TTipoBaseDeduccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoContrato", b =>
                {
                    b.Property<int>("TipoContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoContratoId");

                    b.ToTable("TTipoContrato");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoCuentaXPagar", b =>
                {
                    b.Property<int>("TipoCuentaXPagarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoCuentaXPagarId");

                    b.ToTable("TTipoCuentaXPagar");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoDePago", b =>
                {
                    b.Property<int>("TipoDePagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoDePagoId");

                    b.ToTable("TTipoDePago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoDetalleCDP", b =>
                {
                    b.Property<int>("TipoDetalleCDPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoDetalleCDPId");

                    b.ToTable("TTipoDetalleCDP");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoDocumentoIdentidad", b =>
                {
                    b.Property<int>("TipoDocumentoIdentidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoDocumentoIdentidadId");

                    b.ToTable("TTipoDocumentoIdentidad");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoDocumentoSoporte", b =>
                {
                    b.Property<int>("TipoDocumentoSoporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoDocumentoSoporteId");

                    b.ToTable("TTipoDocumentoSoporte");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoGasto", b =>
                {
                    b.Property<int>("TipoGastoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoGastoId");

                    b.ToTable("TTipoGasto");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoIva", b =>
                {
                    b.Property<int>("TipoIvaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoIvaId");

                    b.ToTable("TTipoIva");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoModalidadContrato", b =>
                {
                    b.Property<int>("TipoModalidadContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoModalidadContratoId");

                    b.ToTable("TTipoModalidadContrato");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TipoOperacion", b =>
                {
                    b.Property<int>("TipoOperacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("TipoOperacionId");

                    b.ToTable("TTipoOperacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Transaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Icono")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("PadreTransaccionId")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("TransaccionId");

                    b.ToTable("TTransaccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnownAs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LookingFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TUser");
                });

            modelBuilder.Entity("ComplementApp.API.Models.UsoPresupuestal", b =>
                {
                    b.Property<int>("UsoPresupuestalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("MarcaAusteridad")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int?>("RubroPresupuestalId")
                        .HasColumnType("int");

                    b.HasKey("UsoPresupuestalId");

                    b.HasIndex("PciId");

                    b.HasIndex("RubroPresupuestalId");

                    b.ToTable("TUsoPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimoAcceso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PciId")
                        .HasColumnType("int");

                    b.Property<int?>("TerceroId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("AreaId");

                    b.HasIndex("CargoId");

                    b.HasIndex("PciId");

                    b.HasIndex("TerceroId");

                    b.ToTable("TUsuario");
                });

            modelBuilder.Entity("ComplementApp.API.Models.UsuarioPerfil", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "PerfilId");

                    b.HasIndex("PerfilId");

                    b.ToTable("TUsuarioPerfil");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ActividadEspecifica", b =>
                {
                    b.HasOne("ComplementApp.API.Models.ActividadGeneral", "ActividadGeneral")
                        .WithMany()
                        .HasForeignKey("ActividadGeneralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId");

                    b.Navigation("ActividadGeneral");

                    b.Navigation("Pci");

                    b.Navigation("RubroPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ActividadGeneral", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId");

                    b.Navigation("Pci");

                    b.Navigation("RubroPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ArchivoDetalleLiquidacion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.Navigation("Pci");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Area", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.Navigation("Pci");
                });

            modelBuilder.Entity("ComplementApp.API.Models.CDP", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pci");

                    b.Navigation("RubroPresupuestal");

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.CargaObligacion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.FuenteFinanciacion", "FuenteFinanciacion")
                        .WithMany()
                        .HasForeignKey("FuenteFinanciacionId");

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.RecursoPresupuestal", "RecursoPresupuestal")
                        .WithMany()
                        .HasForeignKey("RecursoPresupuestalId");

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId");

                    b.HasOne("ComplementApp.API.Models.SituacionFondo", "SituacionFondo")
                        .WithMany()
                        .HasForeignKey("SituacionFondoId");

                    b.HasOne("ComplementApp.API.Models.TipoDocumentoIdentidad", "TipoDocumentoIdentidad")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoIdentidadId");

                    b.HasOne("ComplementApp.API.Models.TipoDocumentoSoporte", "TipoDocumentoSoporte")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoSoporteId");

                    b.Navigation("FuenteFinanciacion");

                    b.Navigation("Pci");

                    b.Navigation("RecursoPresupuestal");

                    b.Navigation("RubroPresupuestal");

                    b.Navigation("SituacionFondo");

                    b.Navigation("TipoDocumentoIdentidad");

                    b.Navigation("TipoDocumentoSoporte");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ClavePresupuestalContable", b =>
                {
                    b.HasOne("ComplementApp.API.Models.FuenteFinanciacion", "FuenteFinanciacion")
                        .WithMany()
                        .HasForeignKey("FuenteFinanciacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.RecursoPresupuestal", "RecursoPresupuestal")
                        .WithMany()
                        .HasForeignKey("RecursoPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.RelacionContable", "RelacionContable")
                        .WithMany()
                        .HasForeignKey("RelacionContableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.SituacionFondo", "SituacionFondo")
                        .WithMany()
                        .HasForeignKey("SituacionFondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.UsoPresupuestal", "UsoPresupuestal")
                        .WithMany()
                        .HasForeignKey("UsoPresupuestalId");

                    b.Navigation("FuenteFinanciacion");

                    b.Navigation("RecursoPresupuestal");

                    b.Navigation("RelacionContable");

                    b.Navigation("RubroPresupuestal");

                    b.Navigation("SituacionFondo");

                    b.Navigation("Tercero");

                    b.Navigation("UsoPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Contrato", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.Navigation("Pci");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Deduccion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId");

                    b.HasOne("ComplementApp.API.Models.TipoBaseDeduccion", "TipoBaseDeduccion")
                        .WithMany()
                        .HasForeignKey("TipoBaseDeduccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tercero");

                    b.Navigation("TipoBaseDeduccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Dependencia", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.Navigation("Area");

                    b.Navigation("Pci");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleArchivoLiquidacion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.ArchivoDetalleLiquidacion", "ArchivoDetalleLiquidacion")
                        .WithMany("DetalleArchivo")
                        .HasForeignKey("ArchivoDetalleLiquidacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.DetalleLiquidacion", "DetalleLiquidacion")
                        .WithMany("DetalleArchivo")
                        .HasForeignKey("DetalleLiquidacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchivoDetalleLiquidacion");

                    b.Navigation("DetalleLiquidacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleFormatoSolicitudPago", b =>
                {
                    b.HasOne("ComplementApp.API.Models.ClavePresupuestalContable", "ClavePresupuestalContable")
                        .WithMany()
                        .HasForeignKey("ClavePresupuestalContableId");

                    b.HasOne("ComplementApp.API.Models.FormatoSolicitudPago", "FormatoSolicitudPago")
                        .WithMany("DetallesFormatoSolicitudPago")
                        .HasForeignKey("FormatoSolicitudPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClavePresupuestalContable");

                    b.Navigation("FormatoSolicitudPago");

                    b.Navigation("RubroPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleLiquidacion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.FormatoSolicitudPago", "FormatoSolicitudPago")
                        .WithMany()
                        .HasForeignKey("FormatoSolicitudPagoId");

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.PlanPago", "PlanPago")
                        .WithMany()
                        .HasForeignKey("PlanPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormatoSolicitudPago");

                    b.Navigation("Pci");

                    b.Navigation("PlanPago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleSolicitudCDP", b =>
                {
                    b.HasOne("ComplementApp.API.Models.PlanAdquisicion", "PlanAdquisicion")
                        .WithMany()
                        .HasForeignKey("PlanAdquisicionId");

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.SolicitudCDP", "SolicitudCDP")
                        .WithMany("DetalleSolicitudCDPs")
                        .HasForeignKey("SolicitudCDPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanAdquisicion");

                    b.Navigation("RubroPresupuestal");

                    b.Navigation("SolicitudCDP");
                });

            modelBuilder.Entity("ComplementApp.API.Models.FormatoSolicitudPago", b =>
                {
                    b.HasOne("ComplementApp.API.Models.ActividadEconomica", "ActividadEconomica")
                        .WithMany()
                        .HasForeignKey("ActividadEconomicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.PlanPago", "PlanPago")
                        .WithMany()
                        .HasForeignKey("PlanPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActividadEconomica");

                    b.Navigation("Pci");

                    b.Navigation("PlanPago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.LiquidacionDeduccion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Deduccion", "Deduccion")
                        .WithMany()
                        .HasForeignKey("DeduccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.DetalleLiquidacion", "DetalleLiquidacion")
                        .WithMany("Deducciones")
                        .HasForeignKey("DetalleLiquidacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deduccion");

                    b.Navigation("DetalleLiquidacion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.NivelAgrupacionPac", b =>
                {
                    b.HasOne("ComplementApp.API.Models.FuenteFinanciacion", "FuenteFinanciacion")
                        .WithMany()
                        .HasForeignKey("FuenteFinanciacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.RecursoPresupuestal", "RecursoPresupuestal")
                        .WithMany()
                        .HasForeignKey("RecursoPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.SituacionFondo", "SituacionFondo")
                        .WithMany()
                        .HasForeignKey("SituacionFondoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuenteFinanciacion");

                    b.Navigation("Pci");

                    b.Navigation("RecursoPresupuestal");

                    b.Navigation("RubroPresupuestal");

                    b.Navigation("SituacionFondo");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Numeracion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.FormatoSolicitudPago", "FormatoSolicitudPago")
                        .WithMany()
                        .HasForeignKey("FormatoSolicitudPagoId");

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.Navigation("FormatoSolicitudPago");

                    b.Navigation("Pci");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ParametroLiquidacionTercero", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.TipoAdminPila", "TipoAdminPila")
                        .WithMany()
                        .HasForeignKey("TipoAdminPilaId");

                    b.Navigation("Pci");

                    b.Navigation("Tercero");

                    b.Navigation("TipoAdminPila");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PerfilTransaccion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Perfil", "Perfil")
                        .WithMany("PerfilTransacciones")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Transaccion", "Transaccion")
                        .WithMany("PerfilTransacciones")
                        .HasForeignKey("TransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Photo", b =>
                {
                    b.HasOne("ComplementApp.API.Models.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PlanAdquisicion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pci");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PlanAdquisicionHistorico", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pci");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ComplementApp.API.Models.PlanPago", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pci");

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.RelacionContable", b =>
                {
                    b.HasOne("ComplementApp.API.Models.AtributoContable", "AtributoContable")
                        .WithMany()
                        .HasForeignKey("AtributoContableId");

                    b.HasOne("ComplementApp.API.Models.CuentaContable", "CuentaContable")
                        .WithMany()
                        .HasForeignKey("CuentaContableId");

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.TipoGasto", "TipoGasto")
                        .WithMany()
                        .HasForeignKey("TipoGastoId");

                    b.Navigation("AtributoContable");

                    b.Navigation("CuentaContable");

                    b.Navigation("Pci");

                    b.Navigation("TipoGasto");
                });

            modelBuilder.Entity("ComplementApp.API.Models.SolicitudCDP", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Estado", "EstadoSolicitudCDP")
                        .WithMany()
                        .HasForeignKey("EstadoSolicitudCDPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.TipoDetalleCDP", "TipoDetalleCDP")
                        .WithMany()
                        .HasForeignKey("TipoDetalleCDPId");

                    b.HasOne("ComplementApp.API.Models.TipoOperacion", "TipoOperacion")
                        .WithMany()
                        .HasForeignKey("TipoOperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoSolicitudCDP");

                    b.Navigation("Pci");

                    b.Navigation("TipoDetalleCDP");

                    b.Navigation("TipoOperacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ComplementApp.API.Models.TerceroDeduccion", b =>
                {
                    b.HasOne("ComplementApp.API.Models.ActividadEconomica", "ActividadEconomica")
                        .WithMany()
                        .HasForeignKey("ActividadEconomicaId");

                    b.HasOne("ComplementApp.API.Models.Deduccion", "Deduccion")
                        .WithMany("DeduccionesXTercero")
                        .HasForeignKey("DeduccionId");

                    b.HasOne("ComplementApp.API.Models.ParametroLiquidacionTercero", "ParametroLiquidacionTercero")
                        .WithMany()
                        .HasForeignKey("ParametroLiquidacionTerceroId");

                    b.HasOne("ComplementApp.API.Models.Tercero", "Tercero")
                        .WithMany("DeduccionesXTercero")
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActividadEconomica");

                    b.Navigation("Deduccion");

                    b.Navigation("ParametroLiquidacionTercero");

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.UsoPresupuestal", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.RubroPresupuestal", "RubroPresupuestal")
                        .WithMany()
                        .HasForeignKey("RubroPresupuestalId");

                    b.Navigation("Pci");

                    b.Navigation("RubroPresupuestal");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Usuario", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("ComplementApp.API.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("ComplementApp.API.Models.Pci", "Pci")
                        .WithMany()
                        .HasForeignKey("PciId");

                    b.HasOne("ComplementApp.API.Models.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId");

                    b.Navigation("Area");

                    b.Navigation("Cargo");

                    b.Navigation("Pci");

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.UsuarioPerfil", b =>
                {
                    b.HasOne("ComplementApp.API.Models.Perfil", "Perfil")
                        .WithMany("UsuarioPerfiles")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComplementApp.API.Models.Usuario", "Usuario")
                        .WithMany("UsuarioPerfiles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ComplementApp.API.Models.ArchivoDetalleLiquidacion", b =>
                {
                    b.Navigation("DetalleArchivo");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Deduccion", b =>
                {
                    b.Navigation("DeduccionesXTercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.DetalleLiquidacion", b =>
                {
                    b.Navigation("Deducciones");

                    b.Navigation("DetalleArchivo");
                });

            modelBuilder.Entity("ComplementApp.API.Models.FormatoSolicitudPago", b =>
                {
                    b.Navigation("DetallesFormatoSolicitudPago");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Perfil", b =>
                {
                    b.Navigation("PerfilTransacciones");

                    b.Navigation("UsuarioPerfiles");
                });

            modelBuilder.Entity("ComplementApp.API.Models.SolicitudCDP", b =>
                {
                    b.Navigation("DetalleSolicitudCDPs");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Tercero", b =>
                {
                    b.Navigation("DeduccionesXTercero");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Transaccion", b =>
                {
                    b.Navigation("PerfilTransacciones");
                });

            modelBuilder.Entity("ComplementApp.API.Models.User", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("ComplementApp.API.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioPerfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
